name: ci/cd
on:
    pull_request:
        types: [reopened, opened, synchronize, ready_for_review, closed]

env:
    ODOO_ADDONS_PATH: ${{ github.workspace }}
    ODOO_CONFIG_FILE: ${{ github.workspace }}/.github/odoo/etc/odoo.conf
    DOCKER_FOLDER: ${{ github.workspace }}/.github/odoo
    ODOO_TEST_DATABASE_NAME: odoo_test
    ODOO_LOG_FILE_CONTAINER: /var/log/odoo/odoo.log
    ODOO_LOG_FILE_HOST: ${{ github.workspace }}/.github/odoo/logs/odoo.log

    CICD_ODOO_OPTIONS: ${{ github.workspace }}/.github/conf/odoo.json
    CICD_SCRIPTS_PATH: ${{ github.workspace }}/.github/scripts
    CICD_UTILS_SCRIPTS_PATH: ${{ github.workspace }}/.github/scripts/utils.sh

    PR_NUMBER: ${{ github.event.pull_request.number }}
    PR_URL: ${{ github.event.pull_request.html_url }}
    PR_EVENT_NAME: ${{ github.event.action }}
    PR_WAS_MERGED: ${{ github.event.pull_request.merged }}

    TELEGRAM_CHANNEL_ID: ${{ secrets.TELEGRAM_CHANNEL_ID }}
    TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
    DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    SERVER_PRIVATE_KEY: ${{ secrets.SERVER_PRIVATE_KEY }}
    SERVER_DB_PASSWORD: ${{ secrets.SERVER_DB_PASSWORD }}
    PRIVATE_KEY_FOR_GITHUB_AUTHEN: ${{secrets.PRIVATE_KEY_FOR_GITHUB_AUTHEN}}

    ODOO_IMAGE_TAG: ${{ vars.ODOO_IMAGE_TAG }}
    DB_IMAGE_TAG: ${{ vars.DB_IMAGE_TAG }}

    SERVER_HOST: ${{ vars.SERVER_HOST }}
    SERVER_USER: ${{ vars.SERVER_USER }}
    SERVER_SSH_PORT: ${{ vars.SERVER_SSH_PORT }}
    SERVER_DEPLOY_PATH: ${{ vars.SERVER_DEPLOY_PATH }}
    SERVER_ODOO_URL: ${{ vars.SERVER_ODOO_URL }}
    SERVER_ODOO_DB_NAME: ${{ vars.SERVER_ODOO_DB_NAME }}

jobs:
    precheck:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Check prerequisites
              run: |
                  bash $CICD_SCRIPTS_PATH/precheck-workflow.sh

    # pylint-test:
    #     runs-on: ubuntu-latest
    #     needs: [precheck]
    #     steps:
    #         - name: Checkout
    #           uses: actions/checkout@v4

    #         - name: Login to Docker Hub
    #           uses: docker/login-action@v3
    #           with:
    #               username: ${{ env.DOCKERHUB_USERNAME }}
    #               password: ${{ env.DOCKERHUB_TOKEN }}

    #         - name: Run Pylint test cases
    #           run: |
    #               bash $CICD_SCRIPTS_PATH/run-pylint-test.sh

    unit-test-at-install:
        runs-on: ubuntu-latest
        needs: [precheck]
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ env.DOCKERHUB_USERNAME }}
                  password: ${{ env.DOCKERHUB_TOKEN }}

            - name: Run Unit test cases
              run: |
                  bash $CICD_SCRIPTS_PATH/run-unit-test.sh "at_install"

    unit-test-post-install:
        runs-on: ubuntu-latest
        needs: [precheck]
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ env.DOCKERHUB_USERNAME }}
                  password: ${{ env.DOCKERHUB_TOKEN }}

            - name: Run Unit test cases
              run: |
                  bash $CICD_SCRIPTS_PATH/run-unit-test.sh "post_install"

    integration-test:
        runs-on: ubuntu-latest
        if: github.event.action == 'closed' && github.event.pull_request.merged == true
        # needs: [pylint-test, unit-test-at-install, unit-test-post-install]
        needs: [unit-test-at-install, unit-test-post-install]
        env:
            SERVER_BACKUP_FOLDER: /tmp/odoo/backup/${{github.repository_id}}
            SERVER_LATEST_BACKUP_FILE_PATH: /tmp/odoo/backup/${{github.repository_id}}/.odoo.tar.gz
            LOCAL_BACKUP_FILE_PATH: ${{github.workspace}}/odoo.tar.gz
            SERVER_BACKUP_SCRIPT_PATH: /tmp/odoo/cicd/${{ github.repository_id }}/backup.sh
            GITHUB_RUN_ATTEMPT: ${{github.run_attempt}}

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ env.DOCKERHUB_USERNAME }}
                  password: ${{ env.DOCKERHUB_TOKEN }}

            - name: "Upload backup script file to server"
              uses: garygrossgarten/github-action-scp@release
              with:
                  local: ${{ env.CICD_SCRIPTS_PATH }}/server-backup.sh
                  remote: ${{ env.SERVER_BACKUP_SCRIPT_PATH }}
                  host: ${{ env.SERVER_HOST }}
                  username: ${{ env.SERVER_USER }}
                  privateKey: ${{ env.SERVER_PRIVATE_KEY }}

            - name: "Backup Odoo on server"
              uses: appleboy/ssh-action@v1.0.0
              with:
                  host: ${{ env.SERVER_HOST }}
                  username: ${{ env.SERVER_USER }}
                  key: ${{ env.SERVER_PRIVATE_KEY }}
                  port: ${{ env.SERVER_SSH_PORT }}
                  command_timeout: 30m
                  script: |
                      bash ${{ env.SERVER_BACKUP_SCRIPT_PATH }} "${{env.SERVER_DEPLOY_PATH}}" "${{env.SERVER_ODOO_DB_NAME}}" "${{env.SERVER_DB_PASSWORD}}" "${{env.ODOO_IMAGE_TAG}}" ${{ env.GITHUB_RUN_ATTEMPT }} "${{ env.SERVER_BACKUP_FOLDER }}"

            - name: "Download backup file"
              env:
                  ssh_key: ${{ secrets.SERVER_PRIVATE_KEY }}
              run: |
                  keyfile_path=${{ github.workspace }}/$(date +%s)_key
                  bash ${{ env.CICD_UTILS_SCRIPTS_PATH }} exec create_private_keyfile_from_content "$ssh_key" "$keyfile_path"
                  scp -o StrictHostKeyChecking=no -P ${{ env.SERVER_SSH_PORT }} -i $keyfile_path ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }}:${{ env.SERVER_LATEST_BACKUP_FILE_PATH }} ${{ env.LOCAL_BACKUP_FILE_PATH }}

            - name: "Run Integration test"
              run: |
                  bash $CICD_SCRIPTS_PATH/run-integration-test.sh ${{env.LOCAL_BACKUP_FILE_PATH}}

    deploy-server:
        runs-on: ubuntu-latest
        needs: [integration-test]
        env:
            SERVER_DEPLOY_SCRIPT_PATH: /tmp/odoo/cicd/${{ github.repository_id }}/deploy.sh
            SSH_PRIVATE_KEY_GITHUB: /tmp/odoo/cicd/${{ github.repository_id }}/github_privatekey
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: "Upload deploy script file to server"
              uses: garygrossgarten/github-action-scp@release
              with:
                  local: ${{ env.CICD_SCRIPTS_PATH }}/server-deploy.sh
                  remote: ${{ env.SERVER_DEPLOY_SCRIPT_PATH }}
                  host: ${{ env.SERVER_HOST }}
                  username: ${{ env.SERVER_USER }}
                  privateKey: ${{ env.SERVER_PRIVATE_KEY }}

            - name: "Upload GitHub private key authen to Server"
              env:
                  private_key_for_github_authen: ${{ env.PRIVATE_KEY_FOR_GITHUB_AUTHEN }}
                  ssh_key: ${{ env.SERVER_PRIVATE_KEY }}
              run: |
                  keyfile_path=/tmp/$(date +%s)
                  private_key_dir=$(dirname $SSH_PRIVATE_KEY_GITHUB)
                  bash ${{ env.CICD_UTILS_SCRIPTS_PATH }} exec create_private_keyfile_from_content "$ssh_key" "$keyfile_path"
                  bash ${{ env.CICD_UTILS_SCRIPTS_PATH }} exec create_private_keyfile_from_content "$private_key_for_github_authen" "$SSH_PRIVATE_KEY_GITHUB"
                  ssh -o StrictHostKeyChecking=no -p ${{ env.SERVER_SSH_PORT }} -i "$keyfile_path" ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }} "mkdir -p $private_key_dir"
                  scp -o StrictHostKeyChecking=no -P ${{ env.SERVER_SSH_PORT }} -i $keyfile_path "$SSH_PRIVATE_KEY_GITHUB" ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }}:$private_key_dir

            - name: "Deploy to server"
              uses: appleboy/ssh-action@v1.0.0
              env:
                  SERVER_CUSTOM_ADDONS_PATH: ${{env.SERVER_DEPLOY_PATH}}/..
                  SERVER_CONFIG_FILE: ${{env.SERVER_DEPLOY_PATH}}/etc/odoo.conf
                  SERVER_DOCKER_COMPOSE_PATH: ${{env.SERVER_DEPLOY_PATH}}
                  GITHUB_STEP_SUMMARY: ${{ env.GITHUB_STEP_SUMMARY }}
              with:
                  host: ${{ env.SERVER_HOST }}
                  username: ${{ env.SERVER_USER }}
                  key: ${{ env.SERVER_PRIVATE_KEY }}
                  port: ${{ env.SERVER_SSH_PORT }}
                  script: |
                      bash ${{env.SERVER_DEPLOY_SCRIPT_PATH}} "${{env.SERVER_DOCKER_COMPOSE_PATH}}" "${{env.SERVER_CUSTOM_ADDONS_PATH}}" "${{env.SERVER_CONFIG_FILE}}" "dump_private_key" "${{ env.SERVER_ODOO_URL }}" "${{ env.SERVER_ODOO_DB_NAME }}"
            - name: The Deploy step has failed
              if: ${{ failure() }}
              run: |
                  bash ${{env.CICD_SCRIPTS_PATH}}/post-server-deploy.sh "failed"
            - name: The Deploy step has successful
              if: ${{ success() }}
              run: |
                  bash ${{env.CICD_SCRIPTS_PATH}}/post-server-deploy.sh "success"
